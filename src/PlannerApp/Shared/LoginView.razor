@inject Blazored.LocalStorage.ILocalStorageService Storage
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@using System.Security.Claims

<AuthorizeView>
    <Authorized>
        <MudMenu  Icon="@Icons.Material.Filled.Person" Color="Color.Default" Direction="Direction.Right" OffsetY="true">
            <MudMenuItem>Welcome @context.User.FindFirst(ClaimTypes.GivenName).Value</MudMenuItem>
            <MudMenuItem OnClick="LogOutAsync  ">Logout</MudMenuItem>
        </MudMenu>
        

    </Authorized>
    <NotAuthorized>
        <MudIconButton Icon="@Icons.Filled.Login" Color="Color.Default" OnClick='() => NavigationManager.NavigateTo("/authentication/login")' />
    </NotAuthorized>
</AuthorizeView>

@code {

    private async Task LogOutAsync()
    {
        await Storage.RemoveItemAsync("access_token");
        await Storage.RemoveItemAsync("expiry_date");

        await AuthenticationStateProvider.GetAuthenticationStateAsync();
        NavigationManager.NavigateTo("/authentication/login");
    }
}
